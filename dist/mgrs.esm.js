const e=65,t=73,r=79;function n(n,o){if(o="number"==typeof o?o:5,!Array.isArray(n))throw new TypeError("forward did not receive an array");if("string"==typeof n[0]||"string"==typeof n[1])throw new TypeError("forward received an array of strings, but it only accepts an array of numbers.");const[a,i]=n;if(a<-180||a>180)throw new TypeError("forward received an invalid longitude of "+a);if(i<-90||i>90)throw new TypeError("forward received an invalid latitude of "+i);if(i<-80||i>84)throw new TypeError(`forward received a latitude of ${i}, but this library does not support conversions of points in polar regions below 80°S and above 84°N`);return function(n,o){const a="00000"+n.easting,i="00000"+n.northing;return n.zoneNumber+n.zoneLetter+function(n,o,a){const i=l(a),s=Math.floor(n/1e5),c=Math.floor(o/1e5)%20;return function(n,o,a){const i=a-1,s="AJSAJS".charCodeAt(i),c="AFAFAF".charCodeAt(i);let h=s+n-1,f=c+o,l=!1;h>90&&(h=h-90+e-1,l=!0);(h===t||s<t&&h>t||(h>t||s<t)&&l)&&h++;(h===r||s<r&&h>r||(h>r||s<r)&&l)&&(h++,h===t&&h++);h>90&&(h=h-90+e-1);f>86?(f=f-86+e-1,l=!0):l=!1;(f===t||c<t&&f>t||(f>t||c<t)&&l)&&f++;(f===r||c<r&&f>r||(f>r||c<r)&&l)&&(f++,f===t&&f++);f>86&&(f=f-86+e-1);return String.fromCharCode(h)+String.fromCharCode(f)}(s,c,i)}(n.easting,n.northing,n.zoneNumber)+a.substr(a.length-5,o)+i.substr(i.length-5,o)}(function(e){const t=e.lat,r=e.lon,n=6378137,o=s(t),a=s(r);let i;i=Math.floor((r+180)/6)+1,180===r&&(i=60);t>=56&&t<64&&r>=3&&r<12&&(i=32);t>=72&&t<84&&(r>=0&&r<9?i=31:r>=9&&r<21?i=33:r>=21&&r<33?i=35:r>=33&&r<42&&(i=37));const c=s(6*(i-1)-180+3),h=n/Math.sqrt(1-.00669438*Math.sin(o)*Math.sin(o)),l=Math.tan(o)*Math.tan(o),u=.006739496752268451*Math.cos(o)*Math.cos(o),b=Math.cos(o)*(a-c),g=n*(.9983242984503243*o-.002514607064228144*Math.sin(2*o)+2639046602129982e-21*Math.sin(4*o)-3.418046101696858e-9*Math.sin(6*o)),M=.9996*h*(b+(1-l+u)*b*b*b/6+(5-18*l+l*l+72*u-.39089081163157013)*b*b*b*b*b/120)+5e5;let d=.9996*(g+h*Math.tan(o)*(b*b/2+(5-l+9*u+4*u*u)*b*b*b*b/24+(61-58*l+l*l+600*u-2.2240339282485886)*b*b*b*b*b*b/720));t<0&&(d+=1e7);return{northing:Math.trunc(d),easting:Math.trunc(M),zoneNumber:i,zoneLetter:f(t)}}({lat:i,lon:a}),o)}function o(e){const t=h(u(e.toUpperCase()));return"number"==typeof t.lat&&"number"==typeof t.lon?[t.lon,t.lat,t.lon,t.lat]:[t.left,t.bottom,t.right,t.top]}function a(e){const t=u(e.toUpperCase()),r=1e4*Math.floor(t.easting/1e4),n=1e4*Math.floor(t.northing/1e4),o=r+1e4,a=n+1e4,i=h({easting:r,northing:n,zoneNumber:t.zoneNumber,zoneLetter:t.zoneLetter}),s=h({easting:o,northing:n,zoneNumber:t.zoneNumber,zoneLetter:t.zoneLetter}),c=h({easting:o,northing:a,zoneNumber:t.zoneNumber,zoneLetter:t.zoneLetter}),f=h({easting:r,northing:a,zoneNumber:t.zoneNumber,zoneLetter:t.zoneLetter});return[[i.lon,i.lat],[s.lon,s.lat],[c.lon,c.lat],[f.lon,f.lat],[i.lon,i.lat]]}function i(e){if(""===e)throw new TypeError("toPoint received a blank string");const t=h(u(e.toUpperCase()));return"number"==typeof t.lat&&"number"==typeof t.lon?[t.lon,t.lat]:[(t.left+t.right)/2,(t.top+t.bottom)/2]}function s(e){return e*(Math.PI/180)}function c(e){return e/Math.PI*180}function h(e){const t=e.northing,r=e.easting,{zoneLetter:n,zoneNumber:o}=e;if(o<0||o>60)return null;const a=6378137,i=(1-Math.sqrt(.99330562))/(1+Math.sqrt(.99330562)),s=r-5e5;let f=t;n<"N"&&(f-=1e7);const l=6*(o-1)-180+3,u=f/.9996/6367449.145945056,b=u+(3*i/2-27*i*i*i/32)*Math.sin(2*u)+(21*i*i/16-55*i*i*i*i/32)*Math.sin(4*u)+151*i*i*i/96*Math.sin(6*u),g=a/Math.sqrt(1-.00669438*Math.sin(b)*Math.sin(b)),M=Math.tan(b)*Math.tan(b),d=.006739496752268451*Math.cos(b)*Math.cos(b),w=.99330562*a/Math.pow(1-.00669438*Math.sin(b)*Math.sin(b),1.5),p=s/(.9996*g);let m=b-g*Math.tan(b)/w*(p*p/2-(5+3*M+10*d-4*d*d-.06065547077041606)*p*p*p*p/24+(61+90*M+298*d+45*M*M-1.6983531815716497-3*d*d)*p*p*p*p*p*p/720);m=c(m);let z,y=(p-(1+2*M+d)*p*p*p/6+(5-2*d+28*M-3*d*d+.05391597401814761+24*M*M)*p*p*p*p*p/120)/Math.cos(b);if(y=l+c(y),"number"==typeof e.accuracy){const t=h({northing:e.northing+e.accuracy,easting:e.easting+e.accuracy,zoneLetter:e.zoneLetter,zoneNumber:e.zoneNumber});z={top:t.lat,right:t.lon,bottom:m,left:y}}else z={lat:m,lon:y};return z}function f(e){if(e<=84&&e>=72)return"X";if(e<72&&e>=-80){const t=8,r=-80;return"CDEFGHJKLMNPQRSTUVWX"[Math.floor((e-r)/t)]}return e>84||e<-80?"Z":void 0}function l(e){let t=e%6;return 0===t&&(t=6),t}function u(n){if(n&&0===n.length)throw new TypeError("MGRSPoint coverting from nothing");n=n.replace(/ /g,"");const{length:o}=n;let a,i=null,s="",c=0;for(;!/[A-Z]/.test(a=n.charAt(c));){if(c>=2)throw new Error("MGRSPoint bad conversion from: "+n);s+=a,c++}const h=parseInt(s,10);if(0===c||c+3>o)throw new Error("MGRSPoint bad conversion from "+n);const f=n.charAt(c++);if(f<="A"||"B"===f||"Y"===f||f>="Z"||"I"===f||"O"===f)throw new Error(`MGRSPoint zone letter ${f} not handled: ${n}`);i=n.substring(c,c+=2);const u=l(h),g=function(n,o){let a="AJSAJS".charCodeAt(o-1),i=1e5,s=!1;for(;a!==n.charCodeAt(0);){if(a++,a===t&&a++,a===r&&a++,a>90){if(s)throw new Error("Bad character: "+n);a=e,s=!0}i+=1e5}return i}(i.charAt(0),u);let M=function(n,o){if(n>"V")throw new TypeError("MGRSPoint given invalid Northing "+n);let a="AFAFAF".charCodeAt(o-1),i=0,s=!1;for(;a!==n.charCodeAt(0);){if(a++,a===t&&a++,a===r&&a++,a>86){if(s)throw new Error("Bad character: "+n);a=e,s=!0}i+=1e5}return i}(i.charAt(1),u);for(;M<b(f);)M+=2e6;const d=o-c;if(d%2!=0)throw new Error("MGRSPoint has to have an even number\nof digits after the zone letter and two 100km letters - front\nhalf for easting meters, second half for\nnorthing meters "+n);const w=d/2;let p,m,z,y=0,A=0;w>0&&(p=1e5/Math.pow(10,w),m=n.substring(c,c+w),y=parseFloat(m)*p,z=n.substring(c+w),A=parseFloat(z)*p);return{easting:y+g,northing:A+M,zoneLetter:f,zoneNumber:h,accuracy:p}}function b(e){let t;switch(e){case"C":t=11e5;break;case"D":t=2e6;break;case"E":t=28e5;break;case"F":t=37e5;break;case"G":t=46e5;break;case"H":t=55e5;break;case"J":t=64e5;break;case"K":t=73e5;break;case"L":t=82e5;break;case"M":t=91e5;break;case"N":t=0;break;case"P":t=8e5;break;case"Q":t=17e5;break;case"R":t=26e5;break;case"S":t=35e5;break;case"T":t=44e5;break;case"U":t=53e5;break;case"V":t=62e5;break;case"W":t=7e6;break;case"X":t=79e5;break;default:t=-1}if(t>=0)return t;throw new TypeError("Invalid zone letter: "+e)}export{n as forward,f as getLetterDesignator,o as inverse,a as polygon,i as toPoint};
//# sourceMappingURL=mgrs.esm.js.map
